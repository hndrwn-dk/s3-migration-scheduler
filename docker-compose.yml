version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
      target: development
    container_name: s3-migration-backend-dev
    ports:
      - "5000:5000"
    volumes:
      - ./server:/app
      - /app/node_modules
      - sqlite_data:/app/data
      - ./server/logs:/app/logs
    environment:
      - NODE_ENV=development
      - FRONTEND_URL=http://localhost:3000
      - DB_PATH=/app/data/migrations.db
    networks:
      - s3-migration-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (r) => process.exit(r.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      target: development
    container_name: s3-migration-frontend-dev
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - REACT_APP_WS_URL=ws://localhost:5000
      - CHOKIDAR_USEPOLLING=true
    networks:
      - s3-migration-network
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    stdin_open: true
    tty: true

networks:
  s3-migration-network:
    driver: bridge

volumes:
  sqlite_data:
    driver: local