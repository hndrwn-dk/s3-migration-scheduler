version: '3.8'

# Base configuration for S3 Migration Scheduler
# This file defines the common configuration that can be extended

services:
  backend:
    image: ${DOCKER_IMAGE_PREFIX:-your-username/s3-migration-scheduler}-backend:${VERSION:-latest}
    container_name: s3-migration-backend
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DB_PATH=/app/data/migrations.db
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - MAX_CONCURRENT_MIGRATIONS=${MAX_CONCURRENT_MIGRATIONS:-5}
    volumes:
      - sqlite_data:/app/data
      - logs_data:/app/logs
    networks:
      - s3-migration-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (r) => process.exit(r.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  frontend:
    image: ${DOCKER_IMAGE_PREFIX:-your-username/s3-migration-scheduler}-frontend:${VERSION:-latest}
    container_name: s3-migration-frontend
    environment:
      - REACT_APP_API_URL=/api
      - REACT_APP_WS_URL=/ws
    networks:
      - s3-migration-network
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  s3-migration-network:
    driver: bridge

volumes:
  sqlite_data:
    driver: local
  logs_data:
    driver: local